version: '2'
services:
  nginx:
    image: nginx:1.19.1-alpine
    container_name: nginx-java
    working_dir: /www
    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
      - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
    ports:
      - "89:80"
      - "445:443"
    environment:
      TZ: "$TZ"
    restart: always
    networks:
      - default

  maven:
    image: haohonglong/maven:1.0.1
    container_name: maven
    ports:
      - "8090:8080"
    working_dir: /www
    volumes:
      - ${SOURCE_DIR}:/www
      - ./conf/maven/settings.xml:/root/.m2/settings.xml:ro
      - ./data/maven/repository:/root/.m2/repository
    networks:
      - public

  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - TZ=$TZ
    ports:
      - "3306:3306"
    privileged: true
    volumes:
      - ./data/mysql:/var/lib/mysql #数据文件挂载
      - ./conf/mysql/my.cnf:/etc/mysql/my.cnf #配置文件
      - ./logs/mysql:/var/log/mysql #日志文件挂载
    networks:
      - default

  redis:
    image: redis:4.0
    container_name: redis
    restart: always
    environment:
      - REDIS_PASS_FILE=/run/secrets/redis-password
      - TZ=$TZ
    command: [
      "bash", "-c",
      '
       docker-entrypoint.sh
       --requirepass "$$(cat $$REDIS_PASS_FILE)"
      '
    ]
    volumes:
      - ./conf/redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ./data/redis/data:/data
      - ./conf/redis/redis-password:/run/secrets/redis-password
    networks:
      - default
    ports:
      - "6397:6379"


  node1:
    image: haohonglong/node:1.0
    container_name: litemall-admin
    environment:
      - TZ=$TZ
    ports:
      - 9527:9527
    volumes:
      - ${SOURCE_DIR}/litemall/litemall-admin:/app
    working_dir: /app
    extra_hosts:
      - "yaf.local:192.168.0.105"
      - "boda.api:192.168.0.105"
    networks:
      - public
    command: bash
    tty: true



networks:
  default:
    driver: bridge
  public: #不创建单独的网络，而是用之前已创建的网络,例如：把容器放到已存在的dnmp_default网络上
    external: 
      name: dnmp_default


